{"version":3,"sources":["index.js"],"names":["newDeck","document","getElementById","drawCards","cardDisplay","messageEl","remainingCardsDisplay","computerEl","playerEl","deckId","computerScore","playerScore","handleClick","fetch","then","res","json","data","deck_id","textContent","remaining","disabled","handleCard","children","innerHTML","cards","image","determineWinner","addEventListener","card1","card2","cardValue","card1ValueIndex","indexOf","value","card2ValueIndex"],"mappings":"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","sourcesContent":["\r\nconst newDeck = document.getElementById('new-deck')\r\nconst drawCards = document.getElementById('draw-cards')\r\nconst cardDisplay =  document.getElementById('card-display')\r\nconst messageEl = document.getElementById(\"message-el\")\r\nconst remainingCardsDisplay = document.getElementById(\"remaining-cards\")\r\nconst computerEl = document.getElementById('computer-el')\r\nconst playerEl = document.getElementById('player-el')\r\nlet deckId = ''\r\nlet computerScore = 0\r\nlet playerScore = 0\r\n\r\n\r\nfunction handleClick() {\r\n    fetch('https://apis.scrimba.com/deckofcards/api/deck/new/shuffle/')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        deckId = data.deck_id\r\n        remainingCardsDisplay.textContent = data.remaining\r\n\r\n        if (data.remaining !== 0) {\r\n            drawCards.disabled = false\r\n              \r\n           }\r\n           \r\n    })\r\n  \r\n}\r\n\r\n\r\nfunction handleCard() {\r\n    fetch(`https://apis.scrimba.com/deckofcards/api/deck/${deckId}/draw/?count=2`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            cardDisplay.children[0].children[1].innerHTML = `\r\n            <img src='${data.cards[0].image}' class=\"card\" />\r\n            `\r\n            cardDisplay.children[1].children[1].innerHTML = `\r\n            <img src='${data.cards[1].image}' class=\"card\" />\r\n            `\r\n           \r\n           messageEl.textContent = determineWinner(data.cards[0], data.cards[1])\r\n           remainingCardsDisplay.textContent = data.remaining\r\n          \r\n           if (data.remaining === 0) {\r\n            drawCards.disabled = true\r\n            if (computerScore > playerScore) {\r\n                messageEl.textContent = \"computer wins the whole thing\"\r\n            } else if (computerScore < playerScore) {\r\n                messageEl.textContent = 'player wins the whole thing'\r\n            } else {\r\n                messageEl.textContent = 'game is a tie'\r\n            }\r\n           }\r\n        })\r\n\r\n}\r\n\r\nnewDeck.addEventListener(\"click\", handleClick)\r\n\r\n\r\n\r\ndrawCards.addEventListener(\"click\", handleCard)\r\n\r\n\r\n function determineWinner(card1, card2) {\r\n     const cardValue = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \r\n     \"10\", \"JACK\", \"QUEEN\", \"KING\", \"ACE\"]\r\n     const card1ValueIndex = cardValue.indexOf(card1.value)\r\n     const card2ValueIndex = cardValue.indexOf(card2.value)\r\n\r\n    if (card1ValueIndex > card2ValueIndex) {\r\n        computerScore++\r\n       computerEl.textContent = computerScore\r\n        return 'Computer wins'\r\n    } else if (card1ValueIndex < card2ValueIndex) {\r\n        playerScore++\r\n       playerEl.textContent = playerScore\r\n        return 'Player 1 wins'\r\n    } else {\r\n        return 'Game is a tie'\r\n    }\r\n      \r\n    \r\n\r\n }\r\n\r\n"],"file":"index.dev.js"}