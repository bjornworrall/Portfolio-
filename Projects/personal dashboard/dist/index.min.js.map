{"version":3,"sources":["index.js"],"names":["liveClock","time","Date","document","getElementById","textContent","toLocaleTimeString","timeStyle","fetch","res","json","then","data","log","console","body","style","backgroundImage","urls","regular","err","Error","innerHTML","concat","image","small","name","market_data","current_price","zar","high_24h","low_24h","setInterval","navigator","geolocation","response","results","sectionName","iconURL","webTitle","getCurrentPosition","position","coords","latitude","longitude","ok","weather","icon","Math","round","main","temp"],"mappings":"aA2DG,SAASA,YACA,IAAIC,EAAO,IAAIC,KAClB,OAASC,SAASC,eAAe,QAAQC,YAAcJ,EAAKK,mBAAmB,QAAS,CAACC,UAAW,WA5D7GC,MAAM,sFAANA,KAAM,SAAAC,GAAA,OAAAA,EAAAC,SACGC,KAAA,SAAAC,GACRD,QAAKE,IAAAD,GACFE,SAAAC,KAAAC,MAAAC,gBAAAH,OAAAA,OAAAF,EAAAM,KAAAC,QAAAL,KACAX,SAASY,eAAWE,UAApBZ,YAAAF,OAAAA,OAAkDe,EAAKC,KAAAA,QAJ3D,MAAA,SAAAC,GAkBOjB,SAAAY,KAAaC,MAAAC,gBAAb,kMAKFN,MAAK,mDACDR,KAAQ,SAAAM,GAMRN,IAASC,EAAAA,GAdd,MAoBOiB,MAAA,sBApBP,OAAAZ,EAAAC,SA0BEC,KAAQ,SAAAC,GACPT,SAAYC,eAAA,YAAZkB,UAAA,wBAAAC,OACAX,EAAAY,MAAAC,MADA,0CAAAF,OAjBSX,EAAKc,KAiBd,iCAHHvB,SAcMC,eAAG,UAAAkB,UAdT,wBAAAC,OAcyBH,EAAhBO,YAAAC,cAAAC,IAdT,kCAAAN,OAAAX,EAAAe,YAAAG,SAAAD,IAAA,kCAAAN,OAPgBX,EAAKe,YAAYI,QAAQF,IAOzC,2BAjBClB,MAqCaR,SAAAA,GAAAA,OAASC,QAAAA,IAAAA,KApBvBI,MAAM,wFA0BRwB,KAAAA,SAAAA,GASQC,IAAUC,EAAAA,GACH,MAAAb,MAAA,sBAGD,OAAMA,EAAKX,SAhCvBC,KAAK,SAAAC,GAkCIT,SAAWO,eAAX,QAAAY,UAAA,gBAAAC,OAEIX,EAAAuB,SAAQC,QAAA,GAAAC,YAFZ,wBAAAd,OAGKe,EAAOH,SAAAC,QAAA,GAAAG,SAHZ,0BAAAhB,OAIQnB,EAAAA,SAAegC,QAAWd,GAAAA,OAJlC,2DAzCT,MAoCQ,SAAAF,GAAA,OAAAN,QAAAD,IAAAO,KAVVY,YAAYhC,UAAW,KASfiC,UAAUC,YAAYM,mBAAmB,SAAAC,GACvCjC,MAAK,sDAAAe,OAAuDkB,EAASC,OAAOC,SAAvE,SAAApB,OAAuFkB,EAASC,OAAOE,UAAvG,yDACHjC,KAAK,SAAAF,GACN,IAAIA,EAAIoC,GACL,MAAMxB,MAAM,6BAEf,OAAOZ,EAAIC,SAEZC,KAAK,SAAAC,GACL,IAAM0B,EAAO,oCAAAf,OAAuCX,EAAKkC,QAAQ,GAAGC,KAAvD,WACb5C,SAASC,eAAe,WAAWkB,UAAnC,yEAAAC,OAEYe,EAFZ,0BAAAf,OAGMyB,KAAKC,MAAMrC,EAAKsC,KAAKC,MAH3B,iDAAA5B,OAKMX,EAAKc,KALX,yBATA,MAiBK,SAAAN,GAAG,OAAIN,QAAQD,IAAIO","file":"index.min.js","sourcesContent":["\r\nfetch(\"https://apis.scrimba.com/unsplash/photos/random?orientation=landscape&query=nature\")\r\n.then(res => res.json())\r\n.then(data => {\r\n    console.log(data)\r\n    document.body.style.backgroundImage = `url(${data.urls.regular})`\r\n    document.getElementById(\"author\").textContent = `By: ${data.user.name}`\r\n})\r\n\r\n\r\n.catch(err => {\r\n  \r\n     document.body.style.backgroundImage = `url(https://images.unsplash.com/photo-1497436072909-60f360e1d4b1?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyMTEwMjl8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MjI4NDE2NzA&ixlib=rb-1.2.1&q=80&w=1080)`\r\n \r\n    })\r\n\r\n        \r\n    fetch('https://api.coingecko.com/api/v3/coins/dogecoin')\r\n    .then(res => {\r\n       if( !res.ok) {\r\n        throw Error('Something is wrong')\r\n       }\r\n       return res.json()\r\n    }) \r\n    .then(data => {\r\n         document.getElementById('currency').innerHTML = `\r\n         <img src=\"${data.image.small}\" class=\"crypt-img\" />\r\n          <p> ${data.name} </p>\r\n          \r\n          ` \r\n\r\n         document.getElementById('prices').innerHTML = `\r\n         <h4> ðŸ’±:  ${data.market_data.current_price.zar} ZAR </h4>\r\n         <h4> ðŸ’ª: ${data.market_data.high_24h.zar} ZAR </h4>\r\n         <h4> ðŸ‘‡: ${data.market_data.low_24h.zar} ZAR </h4>\r\n         `\r\n    })\r\n    .catch(err => console.log(err))\r\n       \r\n\r\n\r\n    fetch('https://content.guardianapis.com/search?api-key=29b7fbe3-38cc-48d0-9ae3-25c2451e3174')\r\n    .then(res => {\r\n      if( !res.ok) {\r\n       throw Error('Something is wrong')\r\n      }\r\n      return res.json()\r\n   }) \r\n   .then(data => {\r\n      document.getElementById('news').innerHTML = `\r\n      <h1> ${data.response.results[0].sectionName} </h1>\r\n      <p>   ${data.response.results[0].webTitle} </p>\r\n      <a href=\"${data.response.results[0].webUrl}\"  target=\"_blank\" > Click Here For More </a>\r\n      `\r\n   })\r\n   .catch(err => console.log(err))\r\n\r\n\r\n\r\n   function liveClock() {\r\n            let time = new Date()\r\n         return   document.getElementById('time').textContent = time.toLocaleTimeString(\"en-us\", {timeStyle: \"medium\"})\r\n  \r\n   }\r\n\r\n\r\n\r\n  setInterval(liveClock, 1000)\r\n \r\n\r\n  \r\n\r\n\r\n   \r\n  \r\n\r\n          navigator.geolocation.getCurrentPosition(position => {\r\n            fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=afb22b0e6a8fecbc4872e4378debd279&units=metric`)\r\n             .then(res => {\r\n             if(!res.ok) {\r\n                throw Error('The data was not received')\r\n             }\r\n             return res.json()\r\n          })\r\n           .then(data => {\r\n            const iconURL = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\r\n            document.getElementById('weather').innerHTML = ` \r\n            <div class=\"weather-container\">\r\n            <img src=\"${iconURL}\" />\r\n            <p> ${Math.round(data.main.temp)}Â°C </p>\r\n            </div>\r\n            <p> ${data.name} </p>\r\n            `\r\n          })\r\n          .catch(err => console.log(err))\r\n  })\r\n\r\n\r\n\r\n\r\n"]}