{"version":3,"sources":["index.js"],"names":["width","grid","document","querySelector","scoreDisplay","squares","layout","createBoard","i","length","square","createElement","appendChild","push","classList","add","pacmanCurrentIndex","keyCode","console","control","e","remove","pacDotEat","log","checkForWin","contains","score","powerScore","ghosts","ghost","setTimeout","unScareGhosts","powerPellet","startIndex","moveGhost","directions","direction","Math","random","setInterval","currentIndex","forEach","isScared","addEventListener","Ghost","className","speed","_classCallCheck","this","gameOver","removeEventListener","innerHTML","floor","timerId","clearInterval","textContent"],"mappings":"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","file":"index.min.js","sourcesContent":["const width = 28;\r\nconst grid = document.querySelector('.grid')\r\nconst scoreDisplay = document.querySelector('#score')\r\nlet squares = []\r\nlet score = 0\r\nlet powerScore = 10\r\n\r\n//28 * 28 = 784\r\n  // 0 - pac-dots\r\n  // 1 - wall\r\n  // 2 - ghost-lair\r\n  // 3 - power-pellet\r\n  // 4 - empty\r\n\r\n\r\nconst layout = [\r\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\r\n    1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,3,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,3,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,\r\n    1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,0,1,1,4,4,4,4,4,4,4,4,4,4,1,1,0,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,0,1,1,4,1,1,1,2,2,1,1,1,4,1,1,0,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,0,1,1,4,1,2,2,2,2,2,2,1,4,1,1,0,1,1,1,1,1,1,\r\n    4,4,4,4,4,4,0,0,0,4,1,2,2,2,2,2,2,1,4,0,0,0,4,4,4,4,4,4,\r\n    1,1,1,1,1,1,0,1,1,4,1,2,2,2,2,2,2,1,4,1,1,0,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,0,1,1,4,1,1,1,1,1,1,1,1,4,1,1,0,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,0,1,1,4,1,1,1,1,1,1,1,1,4,1,1,0,1,1,1,1,1,1,\r\n    1,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,\r\n    1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,3,1,\r\n    1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,\r\n    1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,\r\n    1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,\r\n    1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,\r\n    1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,\r\n    1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\r\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 \r\n]\r\n\r\nfunction createBoard() {\r\n    for (let i = 0; i < layout.length; i++) {\r\n      const square =  document.createElement('div')\r\n\r\n      grid.appendChild(square)\r\n      squares.push(square)\r\n\r\n      if (layout[i] === 0) {\r\n          squares[i].classList.add('pac-dot')\r\n      }   else if (layout[i] === 1) {\r\n          squares[i].classList.add('wall')\r\n      }   else if (layout[i] === 2) {\r\n          squares[i].classList.add('ghost-lair')\r\n      }   else if (layout[i] === 3) {\r\n        squares[i].classList.add('power-pellet')\r\n      } \r\n    }\r\n}\r\n\r\ncreateBoard()\r\n\r\n// down - 40\r\n// up key - 38\r\n// left - 37\r\n// right - 39\r\n\r\nlet pacmanCurrentIndex = 490\r\nsquares[pacmanCurrentIndex].classList.add('pacman')\r\n\r\nfunction control(e) {\r\n  squares[pacmanCurrentIndex].classList.remove('pacman')\r\n\r\n  switch (e.keyCode) {\r\n    case 40:\r\n    console.log('pressed down')\r\n    if (\r\n      !squares[pacmanCurrentIndex + width].classList.contains('ghost-lair')  &&\r\n      !squares[pacmanCurrentIndex + width].classList.contains('wall') &&\r\n      pacmanCurrentIndex + width < width*width)  pacmanCurrentIndex +=width\r\n    break;\r\n    case 38:\r\n    console.log('pressed up')\r\n    if (\r\n      !squares[pacmanCurrentIndex - width].classList.contains('ghost-lair') &&\r\n      !squares[pacmanCurrentIndex - width].classList.contains('wall') &&\r\n      pacmanCurrentIndex - width >= 0)  pacmanCurrentIndex -=width\r\n    break;\r\n    case 37:\r\n    console.log('pressed left')\r\n    if (\r\n      !squares[pacmanCurrentIndex - 1].classList.contains('ghost-lair') &&\r\n      !squares[pacmanCurrentIndex - 1].classList.contains('wall') &&\r\n      pacmanCurrentIndex % width !==0 )  pacmanCurrentIndex -=1\r\n      if (pacmanCurrentIndex === 364) {\r\n        pacmanCurrentIndex = 391\r\n      }\r\n    break;\r\n    case 39:\r\n    console.log('pressed right')\r\n    if (\r\n      !squares[pacmanCurrentIndex + 1].classList.contains('ghost-lair') &&\r\n      !squares[pacmanCurrentIndex + 1].classList.contains('wall') &&\r\n      pacmanCurrentIndex % width < width - 1)  pacmanCurrentIndex +=1\r\n      if (pacmanCurrentIndex === 391) {\r\n        pacmanCurrentIndex = 364\r\n      }\r\n    break;\r\n  }\r\n\r\n  squares[pacmanCurrentIndex].classList.add('pacman')\r\n  pacDotEat()\r\n  powerPellet()\r\n  checkForWin()\r\n  \r\n}\r\n\r\ndocument.addEventListener('keyup', control)\r\n\r\nfunction pacDotEat() {\r\n  if (squares[pacmanCurrentIndex].classList.contains('pac-dot')) {\r\n    score++\r\n    scoreDisplay.innerHTML = score\r\n    squares[pacmanCurrentIndex].classList.remove('pac-dot')\r\n  }\r\n}\r\n\r\n\r\nfunction powerPellet() {\r\n  if (squares[pacmanCurrentIndex].classList.contains('power-pellet')) {\r\n    squares[pacmanCurrentIndex].classList.remove('power-pellet')\r\n    score = score + powerScore\r\n    scoreDisplay.innerHTML = score\r\n    ghosts.forEach(ghost => ghost.isScared = true)\r\n    setTimeout(unScareGhosts, 10000)\r\n  }\r\n}\r\n\r\nfunction unScareGhosts() {\r\n  ghosts.forEach(ghost => ghost.isScared = false)\r\n}\r\n\r\n\r\n class Ghost {\r\n   constructor(className, startIndex, speed) {\r\n     this.className = className\r\n     this.startIndex = startIndex\r\n     this.speed = speed\r\n     this.currentIndex = startIndex\r\n     this.isScared = false\r\n     this.timerId = NaN\r\n   }\r\n }\r\n\r\n\r\n const ghosts = [\r\n   new Ghost('pinky', 348, 250),\r\n   new Ghost('blinky', 376, 400),\r\n   new Ghost('inky', 351, 300),\r\n   new Ghost('clyde', 379, 500)\r\n ]\r\n\r\n\r\n\r\n\r\n ghosts.forEach(ghost => {\r\n    squares[ghost.startIndex].classList.add(ghost.className)\r\n    squares[ghost.startIndex].classList.add('ghost')\r\n })\r\n\r\n\r\n\r\n ghosts.forEach(ghost => moveGhost(ghost));\r\n\r\n function moveGhost(ghost) {\r\n    const directions = [ -1, +1, -width, +width]\r\n    let direction = directions[Math.floor(Math.random() * directions.length)]\r\n\r\n    ghost.timerId = setInterval(function() {\r\n\r\n    if ( !squares[ghost.currentIndex + direction].classList.contains('wall') &&\r\n         !squares[ghost.currentIndex + direction].classList.contains('ghost') \r\n        \r\n    ) {\r\n      squares[ghost.currentIndex].classList.remove(ghost.className)\r\n      squares[ghost.currentIndex].classList.remove('ghost', 'scared-ghost')\r\n      ghost.currentIndex += direction\r\n  \r\n      squares[ghost.currentIndex].classList.add(ghost.className)\r\n      squares[ghost.currentIndex].classList.add('ghost')\r\n   } else direction = directions[Math.floor(Math.random() * directions.length)]\r\n\r\n\r\n      if(ghost.isScared) {\r\n        squares[ghost.currentIndex].classList.add('scared-ghost')\r\n      }\r\n\r\n      //if the ghost is current scared AND pacman is on it\r\n        \r\n        //remove classnames - ghost.className, 'ghost', 'scared-ghost'\r\n        \r\n        // change ghosts currentIndex back to its startIndex\r\n        \r\n        //add a score of 100\r\n        \r\n\r\n      if (ghost.isScared && squares[ghost.currentIndex].classList.contains('pacman')) {\r\n\r\n        squares[ghost.currentIndex].classList.remove('ghost', 'scared-ghost', ghost.className)\r\n        \r\n        ghost.currentIndex = ghost.startIndex \r\n        \r\n        score += 100\r\n        scoreDisplay.innerHTML = score\r\n        squares[ghost.currentIndex].classList.add('ghost', ghost.className)\r\n      }\r\n      gameOver()\r\n\r\n      }, ghost.speed);\r\n      \r\n   \r\n   \r\n }\r\n\r\nfunction gameOver() {\r\n  if(squares[pacmanCurrentIndex].classList.contains('ghost') && \r\n      !squares[pacmanCurrentIndex].classList.contains('scared-ghost') \r\n  ) {\r\n    \r\n    ghosts.forEach(ghost => clearInterval(ghost.timerId))\r\n\r\n    document.removeEventListener('keyup', control)\r\n\r\n    scoreDisplay.textContent = 'Game Over'\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction checkForWin() {\r\n  if (score === 274) {\r\n    ghosts.forEach(ghost => clearInterval(ghost.timerId))\r\n    document.removeEventListener('keyup', control)\r\n    scoreDisplay.innerHTML = 'you won'\r\n  }\r\n}"]}