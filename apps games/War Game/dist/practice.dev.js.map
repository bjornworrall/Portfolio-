{"version":3,"sources":["practice.js"],"names":["deckId","playerScore","computerScore","remainingCards","document","getElementById","cardDisplay","newDeck","drawCards","messageEl","computerEl","playerEl","handleDeck","fetch","then","res","json","data","deck_id","textContent","remaining","handleDraw","children","innerHTML","cards","image","determineWinner","value","disabled","card1","card2","cardValue","card1ValueIndex","indexOf","card2ValueIndex","addEventListener"],"mappings":";;AAAI,IAAIA,MAAM,GAAG,EAAb;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,aAAa,GAAG,CAApB;AAEA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAvB;AACA,IAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB;AACA,IAAME,OAAO,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAhB;AACA,IAAMG,SAAS,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;AACA,IAAMI,SAAS,GAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;AACA,IAAMK,UAAU,GAAGN,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACA,IAAMM,QAAQ,GAAGP,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;;AAGA,SAASO,UAAT,GAAsB;AAClBC,EAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACVjB,IAAAA,MAAM,GAAGiB,IAAI,CAACC,OAAd;AAEAf,IAAAA,cAAc,CAACgB,WAAf,GAA6BF,IAAI,CAACG,SAAlC;AACH,GAND;AAOH;;AAED,SAASC,UAAT,GAAsB;AAClBR,EAAAA,KAAK,yDAAkDb,MAAlD,oBAAL,CACKc,IADL,CACU,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADb,EAEKF,IAFL,CAEU,UAAAG,IAAI,EAAI;AACVX,IAAAA,WAAW,CAACgB,QAAZ,CAAqB,CAArB,EAAwBA,QAAxB,CAAiC,CAAjC,EAAoCC,SAApC,0CACYN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcC,KAD1B;AAGAnB,IAAAA,WAAW,CAACgB,QAAZ,CAAqB,CAArB,EAAwBA,QAAxB,CAAiC,CAAjC,EAAoCC,SAApC,0CACYN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcC,KAD1B;AAKChB,IAAAA,SAAS,CAACU,WAAV,GAAyBO,eAAe,CAACT,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcG,KAAf,EAAsBV,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcG,KAApC,CAAxC;AAEAxB,IAAAA,cAAc,CAACgB,WAAf,GAA6BF,IAAI,CAACG,SAAlC;;AAEC,QAAIH,IAAI,CAACG,SAAL,KAAmB,CAAvB,EAA0B;AACxBZ,MAAAA,SAAS,CAACoB,QAAV,GAAqB,IAArB;;AACA,UAAI1B,aAAa,GAAGD,WAApB,EAAiC;AAC7BQ,QAAAA,SAAS,CAACU,WAAV,GAAwB,8BAAxB;AACH,OAFD,MAEO,IAAIjB,aAAa,GAAGD,WAApB,EAAiC;AACpCQ,QAAAA,SAAS,CAACU,WAAV,GAAwB,4BAAxB;AACH,OAFM,MAEA;AACHV,QAAAA,SAAS,CAACU,WAAV,GAAwB,iBAAxB;AACH;AACJ;AACJ,GAzBL;AA4BH;;AAGD,SAASO,eAAT,CAAyBG,KAAzB,EAAgCC,KAAhC,EAAuC;AACnC,MAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAClB,IADkB,EACZ,MADY,EACJ,OADI,EACK,MADL,EACa,KADb,CAAlB;AAEA,MAAMC,eAAe,GAAGD,SAAS,CAACE,OAAV,CAAkBJ,KAAlB,CAAxB;AACA,MAAMK,eAAe,GAAGH,SAAS,CAACE,OAAV,CAAkBH,KAAlB,CAAxB;;AAEA,MAAIE,eAAe,GAAGE,eAAtB,EAAuC;AACnChC,IAAAA,aAAa;AACbQ,IAAAA,UAAU,CAACS,WAAX,GAAyBjB,aAAzB;AACA,WAAO,eAAP;AACH,GAJD,MAIO,IAAI8B,eAAe,GAAGE,eAAtB,EAAuC;AAC1CjC,IAAAA,WAAW;AACXU,IAAAA,QAAQ,CAACQ,WAAT,GAAuBlB,WAAvB;AACA,WAAO,aAAP;AACH,GAJM,MAIA;AACH,WAAO,eAAP;AACH;AAGJ;;AAEDM,OAAO,CAAC4B,gBAAR,CAAyB,OAAzB,EAAkCvB,UAAlC;AACAJ,SAAS,CAAC2B,gBAAV,CAA2B,OAA3B,EAAoCd,UAApC","sourcesContent":["    let deckId = ''\r\n    let playerScore = 0\r\n    let computerScore = 0\r\n\r\n    const remainingCards = document.getElementById('remaining-cards')\r\n    const cardDisplay = document.getElementById('card-display')\r\n    const newDeck = document.getElementById('new-deck')\r\n    const drawCards = document.getElementById('draw-cards')\r\n    const messageEl = document.getElementById('message-el')\r\n    const computerEl = document.getElementById('computer-el')\r\n    const playerEl = document.getElementById('player-el')\r\n    \r\n\r\n    function handleDeck() {\r\n        fetch('https://apis.scrimba.com/deckofcards/api/deck/new/shuffle/')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            deckId = data.deck_id\r\n\r\n            remainingCards.textContent = data.remaining\r\n        })\r\n    }\r\n\r\n    function handleDraw() {\r\n        fetch(`https://apis.scrimba.com/deckofcards/api/deck/${deckId}/draw/?count=2`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                cardDisplay.children[0].children[1].innerHTML = `\r\n                <img src=\"${data.cards[0].image}\" class=\"card\" />\"\r\n                `\r\n                cardDisplay.children[1].children[1].innerHTML = `\r\n                <img src=\"${data.cards[1].image}\" class=\"card\" />\"\r\n                `\r\n               \r\n\r\n                 messageEl.textContent  = determineWinner(data.cards[0].value, data.cards[1].value )\r\n\r\n                 remainingCards.textContent = data.remaining\r\n\r\n                  if (data.remaining === 0) {\r\n                    drawCards.disabled = true\r\n                    if (computerScore > playerScore) {\r\n                        messageEl.textContent = \"Computer has won the game ðŸ˜­\"\r\n                    } else if (computerScore < playerScore) {\r\n                        messageEl.textContent = \"Player has won the game ðŸ¤–\"\r\n                    } else {\r\n                        messageEl.textContent = \"Game is a tieðŸ‘½\"\r\n                    }\r\n                }\r\n            })\r\n\r\n        \r\n    }\r\n    \r\n\r\n    function determineWinner(card1, card2) {\r\n        const cardValue = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \r\n        \"10\", \"JACK\", \"QUEEN\", \"KING\", \"ACE\"]\r\n        const card1ValueIndex = cardValue.indexOf(card1)\r\n        const card2ValueIndex = cardValue.indexOf(card2)\r\n\r\n        if (card1ValueIndex > card2ValueIndex) {\r\n            computerScore++\r\n            computerEl.textContent = computerScore\r\n            return \"Computer Wins\"\r\n        } else if (card1ValueIndex < card2ValueIndex) {\r\n            playerScore++\r\n            playerEl.textContent = playerScore\r\n            return \"Player Wins\"\r\n        } else {\r\n            return \"Game is a tie\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    newDeck.addEventListener(\"click\", handleDeck)\r\n    drawCards.addEventListener('click', handleDraw)\r\n "],"file":"practice.dev.js"}